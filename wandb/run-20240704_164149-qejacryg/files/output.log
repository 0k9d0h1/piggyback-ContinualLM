[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
07/04/2024 16:41:53 - INFO - __main__ - Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda
==> Preparing data..
07/04/2024 16:41:54 - INFO - __main__ - ==> Preparing data..
 33%|██████████████████████████████████████████████████████▎                                                                                                            | 1/3 [00:00<00:00,  2.17ba/s]
total_num:  3219
len(new_data['test']['labels']):  1429
Dataset: scierc_sup
Size of training set: 2260
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:01<00:00,  2.87ba/s]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00,  3.57ba/s]
Sample 1655 of the training set: {'labels': tensor(0), 'input_ids': tensor([    0,  4528, 48188,  3092,  8488,    64,    28,  5915,    25, 15029,
            9, 48395, 16245, 14148,  5580,  5377,    12,  3743, 25187,   119,
         2726, 27779,   742,   447,    11,    10, 22209, 36719,  1827,   128,
          169,   479,     2,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}. Decode to: <s>These << models >> can be viewed as pairs of [[ probabilistic context-free grammars ]] working in a ` synchronous'way.</s><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad>
07/04/2024 16:41:58 - INFO - __main__ - Sample 1655 of the training set: {'labels': tensor(0), 'input_ids': tensor([    0,  4528, 48188,  3092,  8488,    64,    28,  5915,    25, 15029,
            9, 48395, 16245, 14148,  5580,  5377,    12,  3743, 25187,   119,
         2726, 27779,   742,   447,    11,    10, 22209, 36719,  1827,   128,
          169,   479,     2,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}. Decode to: <s>These << models >> can be viewed as pairs of [[ probabilistic context-free grammars ]] working in a ` synchronous'way.</s><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad>
==> Building model..
07/04/2024 16:41:58 - INFO - __main__ - ==> Building model..
Some weights of the model checkpoint at roberta-base were not used when initializing RobertaModel: ['lm_head.dense.weight', 'lm_head.bias', 'lm_head.dense.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/0k9d0h1/anaconda3/envs/DAS/lib/python3.7/site-packages/transformers/optimization.py:309: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
07/04/2024 16:42:06 - INFO - approaches.finetune - ***** Running training *****
07/04/2024 16:42:06 - INFO - approaches.finetune - Pretrained Model = .//seq0/640000samples/lora_init/ai_unsup_roberta/,  Dataset name = scierc_sup, seed = 2021
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
MyModel(
  (model): LoRARobertaForSequenceClassification(
    (roberta): LoRARobertaModel(
      (embeddings): LoRARobertaEmbeddings(
        (word_embeddings): Embedding(50265, 768, padding_idx=1)
        (position_embeddings): Embedding(514, 768, padding_idx=1)
        (token_type_embeddings): Embedding(1, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): LoRARobertaEncoder(
        (layer): ModuleList(
          (0): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (1): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (2): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (3): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (4): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (5): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (6): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (7): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (8): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (9): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (10): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (11): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                      (2): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                      (2): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                      (2): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                    (2): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (2): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                    (2): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (2): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
    )
    (classifier): LoRARobertaClassificationHead(
      (dense): PretrainingMultiTaskClassifier(
        (classifiers): ModuleDict(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): Linear(in_features=768, out_features=768, bias=True)
          (2): Linear(in_features=768, out_features=768, bias=True)
        )
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (out_proj): MultiTaskClassifier(
        (classifiers): ModuleDict(
          (0): Linear(in_features=768, out_features=7, bias=True)
          (1): Linear(in_features=768, out_features=7, bias=True)
          (2): Linear(in_features=768, out_features=7, bias=True)
        )
      )
    )
  )
  (sigmoid): Sigmoid()
  (mse_loss): MSELoss()
  (cos): CosineSimilarity()
  (tanh): Tanh()
  (softmax): Softmax(dim=1)
  (kd_loss): DistillKL()
  (dropout): Dropout(p=0.1, inplace=False)
  (contrast): MyContrastive(
    (bce): BCEWithLogitsLoss()
    (ce): CrossEntropyLoss()
    (sup_con): SupConLoss()
  )
)
summary_path: .//seq0/640000samples/lora_init/ai_unsup_roberta/../lora_piggyback/scierc_sup_finetune_summary
Epoch 0 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 87%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                     | 123/142 [00:11<00:01, 13.78it/s]
train acc = 0.6319, training loss = 0.0875
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:13<00:00, 10.82it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 87%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                     | 123/142 [00:10<00:01, 13.78it/s]
train acc = 0.6872, training loss = 0.0695
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.76it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 85%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                       | 121/142 [00:10<00:01, 13.76it/s]
train acc = 0.7757, training loss = 0.0468
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.76it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 88%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                   | 125/142 [00:10<00:01, 13.75it/s]
train acc = 0.8827, training loss = 0.0271
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.06it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 92%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋            | 131/142 [00:10<00:00, 13.79it/s]
train acc = 0.9221, training loss = 0.0173
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.10it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 135/142 [00:11<00:00, 13.78it/s]
train acc = 0.9420, training loss = 0.0122
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.01it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 135/142 [00:11<00:00, 13.79it/s]
train acc = 0.9615, training loss = 0.0082
Epoch 7 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.84it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 96%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍     | 137/142 [00:11<00:00, 13.77it/s]
train acc = 0.9726, training loss = 0.0060
Epoch 8 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.95it/s]





 99%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉ | 141/142 [00:11<00:00, 13.77it/s]
train acc = 0.9858, training loss = 0.0038
Epoch 9 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.00it/s]




 81%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                              | 115/142 [00:09<00:01, 13.77it/s]
train acc = 0.9903, training loss = 0.0022
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.92it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 84%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                         | 119/142 [00:10<00:01, 13.76it/s]
train acc = 0.9929, training loss = 0.0019
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.00it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 81%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                              | 115/142 [00:09<00:01, 13.77it/s]
train acc = 0.9934, training loss = 0.0013
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.95it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 82%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                            | 117/142 [00:10<00:01, 13.77it/s]
train acc = 0.9960, training loss = 0.0010
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.94it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 84%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                         | 119/142 [00:10<00:01, 13.77it/s]
train acc = 0.9969, training loss = 0.0007
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.95it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 87%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                     | 123/142 [00:10<00:01, 13.77it/s]
train acc = 0.9982, training loss = 0.0005
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.05it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 89%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                | 127/142 [00:10<00:01, 13.77it/s]
train acc = 0.9951, training loss = 0.0010
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.98it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 91%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍              | 129/142 [00:10<00:00, 13.77it/s]
train acc = 0.9996, training loss = 0.0003
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.99it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 94%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉          | 133/142 [00:11<00:00, 13.78it/s]
train acc = 0.9991, training loss = 0.0003
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.05it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 135/142 [00:11<00:00, 13.77it/s]
train acc = 0.9987, training loss = 0.0003
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.85it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 96%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍     | 137/142 [00:11<00:00, 13.78it/s]
train acc = 0.9996, training loss = 0.0002
Epoch 20 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.88it/s]





 99%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉ | 141/142 [00:11<00:00, 13.78it/s]
train acc = 0.9987, training loss = 0.0003
Epoch 21 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.02it/s]




100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.92it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
train acc = 0.9987, training loss = 0.0004
Epoch 22 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight






 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 135/142 [00:11<00:00, 13.78it/s]
train acc = 0.9982, training loss = 0.0004
Epoch 23 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.78it/s]




 80%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                | 113/142 [00:09<00:02, 13.76it/s]
train acc = 0.9987, training loss = 0.0002

 98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 139/142 [00:11<00:00, 13.79it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.07it/s]




 81%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                              | 115/142 [00:09<00:01, 13.77it/s]
train acc = 0.9996, training loss = 0.0002
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 11.95it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 80%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                | 113/142 [00:09<00:02, 13.77it/s]
train acc = 1.0000, training loss = 0.0001

 98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 139/142 [00:12<00:00, 12.92it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.59it/s]




 78%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 111/142 [00:09<00:02, 13.76it/s]
train acc = 0.9996, training loss = 0.0003

 98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 139/142 [00:11<00:00, 13.78it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.75it/s]




 78%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 111/142 [00:09<00:02, 13.77it/s]
train acc = 0.9982, training loss = 0.0004

 98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 139/142 [00:11<00:00, 13.79it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:12<00:00, 11.73it/s]




 81%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                              | 115/142 [00:09<00:01, 13.78it/s]
train acc = 1.0000, training loss = 0.0001
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.01it/s]
  0%|                                                                                                                                                                         | 0/142 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.0.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.1.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.2.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.3.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.4.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.5.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.6.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.7.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.8.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.9.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.10.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.2
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.2
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.2
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.2
n,p：  model.roberta.encoder.layer.11.output.dense.masks.2
n,p：  model.classifier.dense.classifiers.2.weight
n,p：  model.classifier.dense.classifiers.2.bias
n,p：  model.classifier.out_proj.classifiers.2.weight





 84%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                         | 119/142 [00:10<00:01, 13.77it/s]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 142/142 [00:11<00:00, 12.04it/s]


 61%|█████████████████████████████████████████████████████████████████████████████████████████████████                                                               | 91/150 [00:04<00:01, 35.60it/s]
Path of progressive f1 score: .//seq0/640000samples/lora_init/ai_unsup_roberta//../lora_piggyback/progressive_f1_2021
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 150/150 [00:06<00:00, 24.94it/s]
07/04/2024 16:48:11 - INFO - approaches.finetune - .//seq0/640000samples/lora_init/ai_unsup_roberta/ On scierc_sup, last epoch macro_f1 = 0.7371, acc = 0.7860 (seed=2021)