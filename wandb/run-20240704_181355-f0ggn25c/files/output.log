[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
07/04/2024 18:14:00 - INFO - __main__ - Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda
==> Preparing data..
07/04/2024 18:14:00 - INFO - __main__ - ==> Preparing data..
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  3.21ba/s]
total_num:  1688
len(new_data['test']['labels']):  253
Dataset: aclarc_sup
Size of training set: 1520
Size of testing set: 421
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00,  2.64ba/s]
Sample 1136 of the training set: {'labels': tensor(5), 'input_ids': tensor([    0,   574,  3209,  2013,     8,  3288,   397,    36,  3788,  4839,
         5848,    13,  2502,    12, 14175, 10437,     9, 37015,  1797,  2156,
          142,  1797,    32,   460,   341,    13,   103,  3685,   479,     2,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}. Decode to: <s>Lebart and Rajman ( 2000 ) argue for application-specific evaluation of similarity measures, because measures are always used for some task.</s><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad>
07/04/2024 18:14:03 - INFO - __main__ - Sample 1136 of the training set: {'labels': tensor(5), 'input_ids': tensor([    0,   574,  3209,  2013,     8,  3288,   397,    36,  3788,  4839,
         5848,    13,  2502,    12, 14175, 10437,     9, 37015,  1797,  2156,
          142,  1797,    32,   460,   341,    13,   103,  3685,   479,     2,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}. Decode to: <s>Lebart and Rajman ( 2000 ) argue for application-specific evaluation of similarity measures, because measures are always used for some task.</s><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad><pad>
==> Building model..
07/04/2024 18:14:03 - INFO - __main__ - ==> Building model..
Some weights of the model checkpoint at roberta-base were not used when initializing RobertaModel: ['lm_head.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.weight', 'lm_head.dense.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/0k9d0h1/anaconda3/envs/DAS/lib/python3.7/site-packages/transformers/optimization.py:309: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
07/04/2024 18:14:10 - INFO - approaches.finetune - ***** Running training *****
07/04/2024 18:14:10 - INFO - approaches.finetune - Pretrained Model = .//seq0/640000samples/lora_init/acl_unsup_roberta/,  Dataset name = aclarc_sup, seed = 333
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
MyModel(
  (model): LoRARobertaForSequenceClassification(
    (roberta): LoRARobertaModel(
      (embeddings): LoRARobertaEmbeddings(
        (word_embeddings): Embedding(50265, 768, padding_idx=1)
        (position_embeddings): Embedding(514, 768, padding_idx=1)
        (token_type_embeddings): Embedding(1, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): LoRARobertaEncoder(
        (layer): ModuleList(
          (0): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (1): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (2): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (3): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (4): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (8): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (9): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (10): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )         (1): Parameter containing: [torch.FloatTensor of size 8x768]
          )
          (11): LoRARobertaLayer(
            (attention): LoRARobertaAttention(
              (self): LoRARobertaSelfAttention(
                (query): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (key): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (value): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): LoRARobertaSelfOutput(
                (dense): LoRAPiggybackLinear(
                  (lora_dropout): Identity()
                  (lora_As): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 8x768]
                      (1): Parameter containing: [torch.FloatTensor of size 8x768]
                  )
                  (lora_Bs): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x8]
                      (1): Parameter containing: [torch.FloatTensor of size 768x8]
                  )
                  (masks): ParameterDict(
                      (0): Parameter containing: [torch.FloatTensor of size 768x768]
                      (1): Parameter containing: [torch.FloatTensor of size 768x768]
                  )
                )
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): LoRARobertaIntermediate(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x768]
                    (1): Parameter containing: [torch.FloatTensor of size 8x768]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x8]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 3072x768]
                    (1): Parameter containing: [torch.FloatTensor of size 3072x768]
                )
              )
              (intermediate_act_fn): GELU()
            )
            (output): LoRARobertaOutput(
              (dense): LoRAPiggybackLinear(
                (lora_dropout): Identity()
                (lora_As): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 8x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 8x3072]
                )
                (lora_Bs): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x8]
                    (1): Parameter containing: [torch.FloatTensor of size 768x8]
                )
                (masks): ParameterDict(
                    (0): Parameter containing: [torch.FloatTensor of size 768x3072]
                    (1): Parameter containing: [torch.FloatTensor of size 768x3072]
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
    )
    (classifier): LoRARobertaClassificationHead(
      (dense): PretrainingMultiTaskClassifier(
        (classifiers): ModuleDict(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (out_proj): MultiTaskClassifier(
        (classifiers): ModuleDict(
          (0): Linear(in_features=768, out_features=6, bias=True)
          (1): Linear(in_features=768, out_features=6, bias=True)
        )
      )
    )
  )
  (sigmoid): Sigmoid()
  (mse_loss): MSELoss()
  (cos): CosineSimilarity()
  (tanh): Tanh()
  (softmax): Softmax(dim=1)
  (kd_loss): DistillKL()
  (dropout): Dropout(p=0.1, inplace=False)
  (contrast): MyContrastive(
    (bce): BCEWithLogitsLoss()
    (ce): CrossEntropyLoss()
    (sup_con): SupConLoss()
  )
)
summary_path: .//seq0/640000samples/lora_init/acl_unsup_roberta/../lora_piggyback/aclarc_sup_finetune_summary
Epoch 0 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:09<00:00,  9.77it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.5171, training loss = 0.0922

 20%|████████████████████████████████▏                                                                                                                                | 19/95 [00:02<00:06, 12.47it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.53it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.5520, training loss = 0.0802

 16%|█████████████████████████▍                                                                                                                                       | 15/95 [00:02<00:07, 11.01it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.36it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.6105, training loss = 0.0691

 12%|██████████████████▋                                                                                                                                              | 11/95 [00:02<00:09,  8.83it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 98%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌   | 93/95 [00:08<00:00, 13.78it/s]
train acc = 0.6934, training loss = 0.0558
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.37it/s]
  5%|████████▌                                                                                                                                                         | 5/95 [00:01<00:22,  3.92it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 94%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊          | 89/95 [00:07<00:00, 13.77it/s]
train acc = 0.7408, training loss = 0.0470
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.29it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.24it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.8086, training loss = 0.0368
Epoch 6 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.58it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.8493, training loss = 0.0289

 18%|████████████████████████████▊                                                                                                                                    | 17/95 [00:02<00:06, 11.54it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.06it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.8941, training loss = 0.0203

 16%|█████████████████████████▍                                                                                                                                       | 15/95 [00:02<00:07, 11.11it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.45it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9349, training loss = 0.0131

 12%|██████████████████▋                                                                                                                                              | 11/95 [00:02<00:09,  8.92it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 98%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌   | 93/95 [00:08<00:00, 13.78it/s]
train acc = 0.9559, training loss = 0.0092
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.44it/s]
  9%|███████████████▎                                                                                                                                                  | 9/95 [00:01<00:10,  8.00it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 98%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌   | 93/95 [00:07<00:00, 13.79it/s]
train acc = 0.9743, training loss = 0.0068
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.65it/s]
  5%|████████▌                                                                                                                                                         | 5/95 [00:01<00:21,  4.11it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 94%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊          | 89/95 [00:07<00:00, 13.78it/s]
train acc = 0.9743, training loss = 0.0056
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.46it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.16it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9822, training loss = 0.0044
Epoch 13 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.58it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9816, training loss = 0.0043
Epoch 14 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1

 22%|███████████████████████████████████▌                                                                                                                             | 21/95 [00:02<00:05, 12.80it/s]
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.39it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9822, training loss = 0.0037

 16%|█████████████████████████▍                                                                                                                                       | 15/95 [00:02<00:07, 10.95it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 96%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏      | 91/95 [00:08<00:00, 13.78it/s]
train acc = 0.9855, training loss = 0.0029
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.29it/s]
  3%|█████                                                                                                                                                             | 3/95 [00:01<00:42,  2.16it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 89%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                 | 85/95 [00:07<00:00, 13.78it/s]
train acc = 0.9842, training loss = 0.0027
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.21it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.23it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9849, training loss = 0.0027
Epoch 18 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.55it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9862, training loss = 0.0025
Epoch 19 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.18it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9849, training loss = 0.0022

 12%|██████████████████▋                                                                                                                                              | 11/95 [00:02<00:09,  8.71it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 13.78it/s]
train acc = 0.9842, training loss = 0.0029
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.31it/s]
  7%|███████████▉                                                                                                                                                      | 7/95 [00:01<00:15,  5.72it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 96%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏      | 91/95 [00:07<00:00, 13.77it/s]
train acc = 0.9855, training loss = 0.0021
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.37it/s]
  5%|████████▌                                                                                                                                                         | 5/95 [00:01<00:20,  4.48it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 94%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊          | 89/95 [00:07<00:00, 13.79it/s]
train acc = 0.9862, training loss = 0.0020
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.64it/s]
  3%|█████                                                                                                                                                             | 3/95 [00:01<00:34,  2.64it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍             | 87/95 [00:07<00:00, 13.78it/s]
train acc = 0.9862, training loss = 0.0021
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.70it/s]
  3%|█████                                                                                                                                                             | 3/95 [00:01<00:33,  2.75it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍             | 87/95 [00:07<00:00, 13.79it/s]
train acc = 0.9875, training loss = 0.0017
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.74it/s]
  1%|█▋                                                                                                                                                                | 1/95 [00:01<02:06,  1.35s/it]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.55it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9901, training loss = 0.0015
Epoch 26 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.17it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9875, training loss = 0.0016
Epoch 27 started
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.37it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9875, training loss = 0.0015

 14%|██████████████████████                                                                                                                                           | 13/95 [00:02<00:08,  9.99it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight


100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.33it/s]
  0%|                                                                                                                                                                          | 0/95 [00:00<?, ?it/s]
train acc = 0.9901, training loss = 0.0014

  7%|███████████▉                                                                                                                                                      | 7/95 [00:01<00:15,  5.51it/s]
n,p：  model.roberta.encoder.layer.0.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.0.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.0.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.0.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.0.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.1.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.1.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.1.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.1.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.2.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.2.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.2.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.2.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.3.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.3.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.3.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.3.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.4.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.4.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.4.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.4.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.5.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.5.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.5.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.5.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.6.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.6.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.6.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.6.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.7.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.7.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.7.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.7.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.8.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.8.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.8.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.8.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.9.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.9.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.9.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.9.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.10.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.10.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.10.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.10.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.query.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.key.masks.1
n,p：  model.roberta.encoder.layer.11.attention.self.value.masks.1
n,p：  model.roberta.encoder.layer.11.attention.output.dense.masks.1
n,p：  model.roberta.encoder.layer.11.intermediate.dense.masks.1
n,p：  model.roberta.encoder.layer.11.output.dense.masks.1
n,p：  model.classifier.dense.classifiers.1.weight
n,p：  model.classifier.dense.classifiers.1.bias
n,p：  model.classifier.out_proj.classifiers.1.weight



100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 95/95 [00:08<00:00, 11.25it/s]
 93%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████            | 25/27 [00:01<00:00, 26.36it/s]
train acc = 0.9895, training loss = 0.0015
Path of progressive f1 score: .//seq0/640000samples/lora_init/acl_unsup_roberta//../lora_piggyback/progressive_f1_333
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 27/27 [00:01<00:00, 14.61it/s]
07/04/2024 18:18:23 - INFO - approaches.finetune - .//seq0/640000samples/lora_init/acl_unsup_roberta/ On aclarc_sup, last epoch macro_f1 = 0.6781, acc = 0.7245 (seed=333)